{
  "name": "Grorchestrator",
  "tagline": "Groovy orchestrator for Docker designed for you to just chill",
  "body": "#Introduction\r\nGrorchestrator is an docker orchestration tool designed using Groovy.It abstracts away interaction with a Docker Daemon to a json configuration file and a few commands.it is designed to be used in CD pipelines.\r\n\r\n#Installation.  \r\n1.Download the distro.  \r\n2.Extract the archive.  \r\n3.Set the `$GROR_HOME` env variable to the place where you have extracted the archive.  \r\n4.Adjust the `$PATH` to include this: `export PATH=$PATH:$GROR_HOME/bin`  \r\n\r\n\r\n#Usage.  \r\n1.Create a `gror.json` file where you want to store the environment configurations.The contents should be as described in the documentation.  \r\n2.To pull a image exec `gror pull <your_instance_name> <tag>`.  \r\n3.To run a container exec `gror run <your_instance_name> <tag>`.  \r\n4.To kill a container exec `gror kill <your_instance_name>`.  \r\n\r\n\r\n#Knobs  \r\nSet the following environment variables in your gror server shell.  \r\n`registry_username`  : username for the registry.Maps to `DockerHubAuth.username`.  \r\n`registry_email`: email for the registry.Maps to `DockerHubAuth.email`.  \r\n`registry_password` : password for the registry.Maps to `DockerHubAuth.password`.  \r\n`registry_auth` : auth for the registry.Maps to `DockerHubAuth.auth`.Let it default to `\"\"`.   \r\n\r\n#Current features:  \r\n1.Port mappings from host to container.  \r\n2.Volume mappings from host to container.   \r\n3.Adding extra hosts to the container.  \r\n4.Pulling an image from docker hub.  \r\n5.Running a container.  \r\n6.Killing a container.  \r\n7.SSL Support.  \r\n8.V1.19 to V1.24 of Docker Remote API supported\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}